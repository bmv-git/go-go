package main

import "fmt"

// Subject - это структура, определяющая элементы списка учебных предметов.
type Subject struct {
	SubjectTitle string
	Teacher      string
	Hours        float32
}

// List - это срез []Subject.
// Методы, реализующие добавление, удаление и вывод списка естественным образом
// должны быть привязаны к этому срезу.
type List []Subject

// Add - это метод, реализующий добавление новой структуры Subject к списку List.
func (p *List) Add(s Subject) {
	*p = append(*p, s)
}

// Delete = это метод, реализующий удаление предмета из списка, вместе со связанными с ним
// полями структуры. Поиск нужной записи проводится последовательным перебором, увы)
// Возможно дублирование записей (например, разные преподаватели),
// поэтому находятся и удаляются все вхождения.
func (p *List) Delete(s string) {
	tmp := List{} // новый пустой список
	for _, v := range *p {
		if v.SubjectTitle != s {
			tmp = append(tmp, v)
		}
	}

	// замена старого среза новым...
	// при этом старый срез (*p) теперь указывает на новый базовый массив!
	// на старый базовый массив ссылок больше нет, поэтому он будет зачищен GC...
	*p = tmp
}

// Ls - это метод, реализующий вывод списка на консоль.
// i - порядковый номер вывода (в качестве разделителя).
func (p *List) Ls(i int) {
	fmt.Println("список", i)
	fmt.Println(*p)
}

func main() {
	data := List{} // пустой список
	s1 := Subject{"Математика", "Иванов", 120}
	s2 := Subject{"Физика", "Петров", 44.5}
	s3 := Subject{"Физика", "Сидоров", 44.5}
	data.Ls(1)
	data.Add(s1)
	data.Add(s2)
	data.Add(s3)
	data.Ls(2)
	data.Delete("Физика")
	data.Ls(3)
}
